{"ast":null,"code":"var _jsxFileName = \"D:\\\\React JS\\\\react-basic-PT14312\\\\src\\\\pages\\\\views\\\\Admin\\\\Category\\\\EditCategory.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useForm } from \"react-hook-form\";\n\nconst EditCategory = ({\n  onUpdateCate\n}) => {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  let {\n    id\n  } = useParams();\n  let history = useHistory();\n  let category = category.find(data => data.id == id);\n  const [currentCategory, setCurrentCategory] = useState(category);\n  console.log(currentCategory);\n\n  const onHandleSubmit = e => {\n    //   e.preventDefault();\n    onUpdateCate(currentCategory);\n    history.push(\"/admin/category\");\n  };\n\n  const onHandleChangeCate = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentCategory({ ...currentCategory,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    onSubmit: handleSubmit(onHandleSubmit),\n    className: \"w-50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"CateName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, \"T\\xEAn s\\u1EA3n ph\\u1EA9m\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: currentCategory.name,\n    onChange: onHandleChangeCate,\n    className: \"form-control\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }), errors.name && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 37\n    }\n  }, \"This field is required\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"C\\u1EADp nh\\u1EADt\")));\n};\n\nEditCategory.propTypes = {\n  category: PropTypes.array\n};\nexport default EditCategory;","map":{"version":3,"sources":["D:/React JS/react-basic-PT14312/src/pages/views/Admin/Category/EditCategory.js"],"names":["React","useState","PropTypes","useParams","useHistory","useForm","EditCategory","onUpdateCate","register","handleSubmit","errors","id","history","category","find","data","currentCategory","setCurrentCategory","console","log","onHandleSubmit","e","push","onHandleChangeCate","name","value","target","required","propTypes","array"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAGA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AACvC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAqCL,OAAO,EAAlD;AACA,MAAI;AAAEM,IAAAA;AAAF,MAASR,SAAS,EAAtB;AACA,MAAIS,OAAO,GAAGR,UAAU,EAAxB;AACA,MAAIS,QAAQ,GAAGA,QAAQ,CAACC,IAAT,CAAeC,IAAD,IAAUA,IAAI,CAACJ,EAAL,IAAWA,EAAnC,CAAf;AACA,QAAM,CAACK,eAAD,EAAkBC,kBAAlB,IAAwChB,QAAQ,CAACY,QAAD,CAAtD;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,eAAZ;;AACA,QAAMI,cAAc,GAAIC,CAAD,IAAO;AAC1B;AACAd,IAAAA,YAAY,CAACS,eAAD,CAAZ;AACAJ,IAAAA,OAAO,CAACU,IAAR,CAAa,iBAAb;AACH,GAJD;;AAKA,QAAMC,kBAAkB,GAAIF,CAAD,IAAO;AAC9B,UAAM;AAAEG,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBJ,CAAC,CAACK,MAA1B;AACAT,IAAAA,kBAAkB,CAAC,EACf,GAAGD,eADY;AAEf,OAACQ,IAAD,GAAQC;AAFO,KAAD,CAAlB;AAIH,GAND;;AAOA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,MAAM,EAAC,EAAb;AAAgB,IAAA,QAAQ,EAAEhB,YAAY,CAACW,cAAD,CAAtC;AAAwD,IAAA,SAAS,EAAC,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,eAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,MAAxB;AAA+B,IAAA,KAAK,EAAEJ,eAAe,CAACQ,IAAtD;AAA4D,IAAA,QAAQ,EAAED,kBAAtE;AAA0F,IAAA,SAAS,EAAC,cAApG;AAAmH,IAAA,GAAG,EAAEf,QAAQ,CAAC;AAAEmB,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAAhI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKjB,MAAM,CAACc,IAAP,iBAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAHpB,CADJ,eAQI;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BARJ,CADJ,CADJ;AAcH,CAjCD;;AAmCAlB,YAAY,CAACsB,SAAb,GAAyB;AACrBf,EAAAA,QAAQ,EAAEX,SAAS,CAAC2B;AADC,CAAzB;AAIA,eAAevB,YAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n\r\nconst EditCategory = ({ onUpdateCate }) => {\r\n    const { register, handleSubmit, errors } = useForm();\r\n    let { id } = useParams();\r\n    let history = useHistory();\r\n    let category = category.find((data) => data.id == id);\r\n    const [currentCategory, setCurrentCategory] = useState(category);\r\n    console.log(currentCategory);\r\n    const onHandleSubmit = (e) => {\r\n        //   e.preventDefault();\r\n        onUpdateCate(currentCategory);\r\n        history.push(\"/admin/category\");\r\n    };\r\n    const onHandleChangeCate = (e) => {\r\n        const { name, value } = e.target;\r\n        setCurrentCategory({\r\n            ...currentCategory,\r\n            [name]: value,\r\n        });\r\n    };\r\n    return (\r\n        <div>\r\n            <form action=\"\" onSubmit={handleSubmit(onHandleSubmit)} className=\"w-50\" >\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"CateName\">Tên sản phẩm</label>\r\n                    <input type=\"text\" name=\"name\" value={currentCategory.name} onChange={onHandleChangeCate} className=\"form-control\" ref={register({ required: true })} />\r\n                    {errors.name && <span>This field is required</span>}\r\n                </div>\r\n\r\n\r\n                <button className=\"btn btn-primary\">Cập nhật</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nEditCategory.propTypes = {\r\n    category: PropTypes.array\r\n}\r\n\r\nexport default EditCategory"]},"metadata":{},"sourceType":"module"}