{"ast":null,"code":"var _jsxFileName = \"D:\\\\React JS\\\\react-basic-PT14312\\\\src\\\\pages\\\\views\\\\Admin\\\\Post\\\\EditPost.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useForm } from \"react-hook-form\";\nimport Swal from 'sweetalert2'; // const EditPost = ({ posts, onUpdatePost }) => {\n//     let { id } = useParams();\n//     let history = useHistory();\n//     let post = posts.find((data) => data.id == id);\n//     const [currentPost, setCurrentPost] = useState(post);\n//     const { register, handleSubmit, errors } = useForm();\n//     const onHandleSubmit = (e) => {\n//         Swal.fire(\n//             'Updated!',\n//             'Your file has been updated.',\n//             'success'\n//         )\n//         onUpdatePost(currentPost);\n//         history.push(\"/admin/post\");\n//     };\n//     const onHandleChange = (e) => {\n//         const { name, value } = e.target;\n//         setCurrentPost({\n//             ...currentPost,\n//             [name]: value,\n//         });\n//     };\n\nconst EditPost = ({\n  post,\n  onUpdatePost\n}) => {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  let {\n    id\n  } = useParams();\n  let history = useHistory();\n  let posts = post.find(data => data.id == id);\n  const [currentPost, setCurrentPost] = useState(posts);\n  console.log(currentPost);\n\n  const onSubmit = e => {\n    onUpdatePost(currentPost);\n    history.push(\"/admin/post\");\n  };\n\n  const onHandleChangePost = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentPost({ ...currentPost,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    onSubmit: handleSubmit(onSubmit),\n    className: \"w-50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"productName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  }, \"Ti\\xEAu \\u0111\\u1EC1\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    value: currentPost.title,\n    onChange: onHandleChangePost,\n    className: \"form-control\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 29\n    }\n  }), errors.title && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 46\n    }\n  }, \"This field is required\")))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    onSubmit: handleSubmit(onSubmit),\n    className: \"w-50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"productName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 29\n    }\n  }, \"M\\xF4 t\\u1EA3 ng\\u1EAFn\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"short_desc\",\n    value: currentPost.short_desc,\n    onChange: onHandleChange,\n    className: \"form-control\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }\n  }), errors.short_desc && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 51\n    }\n  }, \"This field is required\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    onSubmit: handleSubmit(onSubmit),\n    className: \"w-50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"productName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 33\n    }\n  }, \"N\\u1ED9i dung\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    name: \"content\",\n    value: currentPost.content,\n    onChange: onHandleChange,\n    className: \"form-control\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 33\n    }\n  }), errors.content && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 52\n    }\n  }, \"This field is required\")))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    onSubmit: handleSubmit(onSubmit),\n    className: \"w-50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"productName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 33\n    }\n  }, \"\\u1EA2nh\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"image\",\n    value: currentPost.image,\n    onChange: onHandleChange,\n    className: \"form-control\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 33\n    }\n  }), errors.image && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 50\n    }\n  }, \"This field is required\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }, \"C\\u1EADp nh\\u1EADt\"))))));\n};\n\nEditPost.propTypes = {};\nexport default EditPost;","map":{"version":3,"sources":["D:/React JS/react-basic-PT14312/src/pages/views/Admin/Post/EditPost.js"],"names":["React","useState","PropTypes","useParams","useHistory","useForm","Swal","EditPost","post","onUpdatePost","register","handleSubmit","errors","id","history","posts","find","data","currentPost","setCurrentPost","console","log","onSubmit","e","push","onHandleChangePost","name","value","target","title","required","short_desc","onHandleChange","content","image","propTypes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,IAAP,MAAiB,aAAjB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAA4B;AACzC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAqCP,OAAO,EAAlD;AACA,MAAI;AAAEQ,IAAAA;AAAF,MAASV,SAAS,EAAtB;AACA,MAAIW,OAAO,GAAGV,UAAU,EAAxB;AACA,MAAIW,KAAK,GAAGP,IAAI,CAACQ,IAAL,CAAWC,IAAD,IAAUA,IAAI,CAACJ,EAAL,IAAWA,EAA/B,CAAZ;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAACc,KAAD,CAA9C;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;;AACA,QAAMI,QAAQ,GAAIC,CAAD,IAAO;AACpBd,IAAAA,YAAY,CAACS,WAAD,CAAZ;AACAJ,IAAAA,OAAO,CAACU,IAAR,CAAa,aAAb;AACH,GAHD;;AAIA,QAAMC,kBAAkB,GAAIF,CAAD,IAAO;AAC9B,UAAM;AAAEG,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBJ,CAAC,CAACK,MAA1B;AACAT,IAAAA,cAAc,CAAC,EACX,GAAGD,WADQ;AAEX,OAACQ,IAAD,GAAQC;AAFG,KAAD,CAAd;AAIH,GAND;;AAOA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,MAAM,EAAC,EAAb;AAAgB,IAAA,QAAQ,EAAEhB,YAAY,CAACW,QAAD,CAAtC;AAAkD,IAAA,SAAS,EAAC,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAEJ,WAAW,CAACW,KAAnD;AAA0D,IAAA,QAAQ,EAAEJ,kBAApE;AAAwF,IAAA,SAAS,EAAC,cAAlG;AAAiH,IAAA,GAAG,EAAEf,QAAQ,CAAC;AAAEoB,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAA9H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKlB,MAAM,CAACiB,KAAP,iBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAHrB,CADJ,CADJ,CADJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,MAAM,EAAC,EAAb;AAAgB,IAAA,QAAQ,EAAElB,YAAY,CAACW,QAAD,CAAtC;AAAkD,IAAA,SAAS,EAAC,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,eAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,YAAxB;AAAqC,IAAA,KAAK,EAAEJ,WAAW,CAACa,UAAxD;AAAoE,IAAA,QAAQ,EAAEC,cAA9E;AAA8F,IAAA,SAAS,EAAC,cAAxG;AAAuH,IAAA,GAAG,EAAEtB,QAAQ,CAAC;AAAEoB,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAApI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKlB,MAAM,CAACmB,UAAP,iBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAH1B,CADJ,CADJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,MAAM,EAAC,EAAb;AAAgB,IAAA,QAAQ,EAAEpB,YAAY,CAACW,QAAD,CAAtC;AAAkD,IAAA,SAAS,EAAC,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AAAU,IAAA,IAAI,EAAC,MAAf;AAAsB,IAAA,IAAI,EAAC,SAA3B;AAAqC,IAAA,KAAK,EAAEJ,WAAW,CAACe,OAAxD;AAAiE,IAAA,QAAQ,EAAED,cAA3E;AAA2F,IAAA,SAAS,EAAC,cAArG;AAAoH,IAAA,GAAG,EAAEtB,QAAQ,CAAC;AAAEoB,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAAjI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKlB,MAAM,CAACqB,OAAP,iBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAHvB,CADJ,CADJ,CARJ,eAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,MAAM,EAAC,EAAb;AAAgB,IAAA,QAAQ,EAAEtB,YAAY,CAACW,QAAD,CAAtC;AAAkD,IAAA,SAAS,EAAC,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAEJ,WAAW,CAACgB,KAAnD;AAA0D,IAAA,QAAQ,EAAEF,cAApE;AAAoF,IAAA,SAAS,EAAC,cAA9F;AAA6G,IAAA,GAAG,EAAEtB,QAAQ,CAAC;AAAEoB,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKlB,MAAM,CAACsB,KAAP,iBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAHrB,CADJ,eAMI;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANJ,CADJ,CAjBJ,CAVJ,CADJ,CADJ;AA2CH,CA7DD;;AAgEA3B,QAAQ,CAAC4B,SAAT,GAAqB,EAArB;AAIA,eAAe5B,QAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useForm } from \"react-hook-form\";\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\n// const EditPost = ({ posts, onUpdatePost }) => {\r\n//     let { id } = useParams();\r\n//     let history = useHistory();\r\n//     let post = posts.find((data) => data.id == id);\r\n//     const [currentPost, setCurrentPost] = useState(post);\r\n//     const { register, handleSubmit, errors } = useForm();\r\n//     const onHandleSubmit = (e) => {\r\n//         Swal.fire(\r\n//             'Updated!',\r\n//             'Your file has been updated.',\r\n//             'success'\r\n//         )\r\n//         onUpdatePost(currentPost);\r\n//         history.push(\"/admin/post\");\r\n//     };\r\n//     const onHandleChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         setCurrentPost({\r\n//             ...currentPost,\r\n//             [name]: value,\r\n//         });\r\n//     };\r\nconst EditPost = ({ post, onUpdatePost }) => {\r\n    const { register, handleSubmit, errors } = useForm();\r\n    let { id } = useParams();\r\n    let history = useHistory();\r\n    let posts = post.find((data) => data.id == id);\r\n    const [currentPost, setCurrentPost] = useState(posts);\r\n    console.log(currentPost);\r\n    const onSubmit = (e) => {\r\n        onUpdatePost(currentPost);\r\n        history.push(\"/admin/post\");\r\n    };\r\n    const onHandleChangePost = (e) => {\r\n        const { name, value } = e.target;\r\n        setCurrentPost({\r\n            ...currentPost,\r\n            [name]: value\r\n        });\r\n    };\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div>\r\n                    <form action=\"\" onSubmit={handleSubmit(onSubmit)} className=\"w-50\" >\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"productName\">Tiêu đề</label>\r\n                            <input type=\"text\" name=\"title\" value={currentPost.title} onChange={onHandleChangePost} className=\"form-control\" ref={register({ required: true })} />\r\n                            {errors.title && <span>This field is required</span>}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div>\r\n                    <form action=\"\" onSubmit={handleSubmit(onSubmit)} className=\"w-50\" >\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"productName\">Mô tả ngắn</label>\r\n                            <input type=\"text\" name=\"short_desc\" value={currentPost.short_desc} onChange={onHandleChange} className=\"form-control\" ref={register({ required: true })} />\r\n                            {errors.short_desc && <span>This field is required</span>}\r\n                        </div>\r\n                    </form>\r\n                    <div>\r\n                        <form action=\"\" onSubmit={handleSubmit(onSubmit)} className=\"w-50\" >\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"productName\">Nội dung</label>\r\n                                <textarea type=\"text\" name=\"content\" value={currentPost.content} onChange={onHandleChange} className=\"form-control\" ref={register({ required: true })} />\r\n                                {errors.content && <span>This field is required</span>}\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div>\r\n                        <form action=\"\" onSubmit={handleSubmit(onSubmit)} className=\"w-50\" >\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"productName\">Ảnh</label>\r\n                                <input type=\"text\" name=\"image\" value={currentPost.image} onChange={onHandleChange} className=\"form-control\" ref={register({ required: true })} />\r\n                                {errors.image && <span>This field is required</span>}\r\n                            </div>\r\n                            <button className=\"btn btn-primary\">Cập nhật</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nEditPost.propTypes = {\r\n\r\n}\r\n\r\nexport default EditPost"]},"metadata":{},"sourceType":"module"}